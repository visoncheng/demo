<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.test</groupId>
    <artifactId>mySpringCloud</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--packaging 一定要说明是pom，这个字段描述这个pom是什么项目
    。实际的情形中，如果你不声明该元素，Maven会帮你生成一个JAR包；
    如果你定义该元素的值为war，那你会得到一个WAR包；
    如果定义其值为POM（比如是一个父模块），那什么包都不会生成。
    -->
    <packaging>pom</packaging>

    <!--声明父module-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <modules>
        <!--各个子模块-->
        <module>eureka-server</module>
        <module>config</module>
        <module>gateway</module>
        <module>eureka-client</module>
        <module>feign</module>
        <module>ribbon</module>
    </modules>

    <properties>
        <spring-cloud.version>Finchley.SR1</spring-cloud.version>
    </properties>

    <!--声明所有模块会引用的pom,子模块的pom只需要说明dependency即可，不需要指明版本，
    都是从这里面去获取相应的版本，具体可以查看maven的dependencyManagement用法-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--所有的子模块都是使用这种构建方式，如果整个项目都使用这个构建方式，可以放在这里，
    如果有子模块要使用其他构建方式，需要将这段copy到各个子模块-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>